@model CascadingDemo.ViewModels.EmployeeEditViewModel

@{
    ViewData["Title"] = "Edit Employee";
}

<div class="container mt-5">
    <!-- Card for better UI -->
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3 class="m-0">Edit Employee</h3>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                <!-- Hidden field for EmployeeId -->
                <input type="hidden" asp-for="EmployeeId" />

                <!-- Personal Info -->
                <div class="row">
                    <!-- Full Name -->
                    <div class="col-md-6 mb-3">
                        <label asp-for="FullName" class="form-label"></label>
                        <input asp-for="FullName" class="form-control" />
                        <span asp-validation-for="FullName" class="text-danger"></span>
                    </div>

                    <!-- Email -->
                    <div class="col-md-6 mb-3">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>

                <div class="row">
                    <!-- Phone -->
                    <div class="col-md-6 mb-3">
                        <label asp-for="Phone" class="form-label"></label>
                        <input asp-for="Phone" class="form-control" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>

                    <!-- Department -->
                    <div class="col-md-6 mb-3">
                        <label asp-for="Department" class="form-label"></label>
                        <input asp-for="Department" class="form-control" />
                        <span asp-validation-for="Department" class="text-danger"></span>
                    </div>
                </div>

                <!-- Divider -->
                <hr />
                <h5 class="mb-3">Location Details</h5>

                <div class="row">
                    <!-- Country -->
                    <div class="col-md-4 mb-3">
                        <label asp-for="CountryId" class="form-label">Country</label>
                        <select asp-for="CountryId"
                                class="form-select"
                                asp-items="Model.Countries"
                                id="CountryId">
                            <option value="">Select Country</option>
                        </select>
                        <span asp-validation-for="CountryId" class="text-danger"></span>
                    </div>

                    <!-- State -->
                    <div class="col-md-4 mb-3">
                        <label asp-for="StateId" class="form-label">State</label>
                        <select asp-for="StateId"
                                class="form-select"
                                id="StateId">
                            <option value="">Select State</option>
                        </select>
                        <span asp-validation-for="StateId" class="text-danger"></span>
                    </div>

                    <!-- City -->
                    <div class="col-md-4 mb-3">
                        <label asp-for="CityId" class="form-label">City</label>
                        <select asp-for="CityId"
                                class="form-select"
                                id="CityId">
                            <option value="">Select City</option>
                        </select>
                        <span asp-validation-for="CityId" class="text-danger"></span>
                    </div>
                </div>

                <!-- Action buttons -->
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success me-2">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                    <a class="btn btn-secondary" href="@Url.Action("Index", "Employees")">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- jQuery and AJAX -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Store the preselected values from the model
        var selectedState = '@Model.StateId';
        var selectedCity = '@Model.CityId';

        // Pre-load the State dropdown based on the selected Country
        var selectedCountry = $('#CountryId').val();
        if (selectedCountry) {
            $.getJSON('@Url.Action("GetStates")', { countryId: selectedCountry }, function (states) {
                var statesSelect = $('#StateId');
                statesSelect.empty();
                statesSelect.append('<option value="">Select State</option>');
                $.each(states, function (index, state) {
                    var option = $('<option/>', {
                        value: state.value,
                        text: state.text
                    });
                    if (state.value == selectedState) {
                        option.prop('selected', true);
                    }
                    statesSelect.append(option);
                });
            });
        }

        // Pre-load the City dropdown based on the selected State
        if (selectedState) {
            $.getJSON('@Url.Action("GetCities")', { stateId: selectedState }, function (cities) {
                var citiesSelect = $('#CityId');
                citiesSelect.empty();
                citiesSelect.append('<option value="">Select City</option>');
                $.each(cities, function (index, city) {
                    var option = $('<option/>', {
                        value: city.value,
                        text: city.text
                    });
                    if (city.value == selectedCity) {
                        option.prop('selected', true);
                    }
                    citiesSelect.append(option);
                });
            });
        }

        // When Country changes, update the States and reset Cities
        $('#CountryId').change(function () {
            var countryId = $(this).val();
            $.getJSON('@Url.Action("GetStates")', { countryId: countryId }, function (states) {
                var statesSelect = $('#StateId');
                statesSelect.empty();
                statesSelect.append('<option value="">Select State</option>');
                $.each(states, function (index, state) {
                    statesSelect.append($('<option/>', {
                        value: state.value,
                        text: state.text
                    }));
                });
                // Reset City dropdown
                $('#CityId').empty().append('<option value="">Select City</option>');
            });
        });

        // When State changes, update Cities
        $('#StateId').change(function () {
            var stateId = $(this).val();
            $.getJSON('@Url.Action("GetCities")', { stateId: stateId }, function (cities) {
                var citiesSelect = $('#CityId');
                citiesSelect.empty();
                citiesSelect.append('<option value="">Select City</option>');
                $.each(cities, function (index, city) {
                    citiesSelect.append($('<option/>', {
                        value: city.value,
                        text: city.text
                    }));
                });
            });
        });
    });
</script>