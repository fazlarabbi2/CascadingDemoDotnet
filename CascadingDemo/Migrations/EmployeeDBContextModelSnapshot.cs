// <auto-generated />
using CascadingDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CascadingDemo.Migrations
{
    [DbContext(typeof(EmployeeDBContext))]
    partial class EmployeeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CascadingDemo.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Mumbai",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Pune",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Ahmedabad",
                            StateId = 2
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Surat",
                            StateId = 2
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "New Delhi",
                            StateId = 3
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Bangalore",
                            StateId = 4
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "Mysore",
                            StateId = 4
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "Los Angeles",
                            StateId = 5
                        },
                        new
                        {
                            CityId = 9,
                            CityName = "San Francisco",
                            StateId = 5
                        },
                        new
                        {
                            CityId = 10,
                            CityName = "Houston",
                            StateId = 6
                        },
                        new
                        {
                            CityId = 11,
                            CityName = "Dallas",
                            StateId = 6
                        },
                        new
                        {
                            CityId = 12,
                            CityName = "New York City",
                            StateId = 7
                        },
                        new
                        {
                            CityId = 13,
                            CityName = "Buffalo",
                            StateId = 7
                        },
                        new
                        {
                            CityId = 14,
                            CityName = "London",
                            StateId = 8
                        },
                        new
                        {
                            CityId = 15,
                            CityName = "Manchester",
                            StateId = 8
                        },
                        new
                        {
                            CityId = 16,
                            CityName = "Edinburgh",
                            StateId = 9
                        },
                        new
                        {
                            CityId = 17,
                            CityName = "Glasgow",
                            StateId = 9
                        });
                });

            modelBuilder.Entity("CascadingDemo.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "India"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "USA"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "UK"
                        });
                });

            modelBuilder.Entity("CascadingDemo.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CascadingDemo.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            CountryId = 1,
                            StateName = "Maharashtra"
                        },
                        new
                        {
                            StateId = 2,
                            CountryId = 1,
                            StateName = "Gujarat"
                        },
                        new
                        {
                            StateId = 3,
                            CountryId = 1,
                            StateName = "Delhi"
                        },
                        new
                        {
                            StateId = 4,
                            CountryId = 1,
                            StateName = "Karnataka"
                        },
                        new
                        {
                            StateId = 5,
                            CountryId = 2,
                            StateName = "California"
                        },
                        new
                        {
                            StateId = 6,
                            CountryId = 2,
                            StateName = "Texas"
                        },
                        new
                        {
                            StateId = 7,
                            CountryId = 2,
                            StateName = "New York"
                        },
                        new
                        {
                            StateId = 8,
                            CountryId = 3,
                            StateName = "England"
                        },
                        new
                        {
                            StateId = 9,
                            CountryId = 3,
                            StateName = "Scotland"
                        });
                });

            modelBuilder.Entity("CascadingDemo.Models.City", b =>
                {
                    b.HasOne("CascadingDemo.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("CascadingDemo.Models.Employee", b =>
                {
                    b.HasOne("CascadingDemo.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CascadingDemo.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CascadingDemo.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CascadingDemo.Models.State", b =>
                {
                    b.HasOne("CascadingDemo.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CascadingDemo.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("CascadingDemo.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
